<!DOCTYPE html>
<html>
  <body>
    <button><input type="file"/></button>
    <button id="asd">dsdssdsd</button>
    <script src="https://res.wx.qq.com/open/js/jweixin-1.3.2.js"></script>
    <script>
      let wxConfig = "{{wxConfig}}"
      console.log(wxConfig)
      wxConfig = JSON.parse(decodeURIComponent(wxConfig))
      console.log(wxConfig)
      wx.config(wxConfig);
      wx.ready(function () {
        const fuck = wx
          .miniProgram
          .navigateBack
          .bind(wx.miniProgram)
        const asdd = () => wx
          .miniProgram
          .navigateBack()
        document
          .querySelector("#asd")
          .addEventListener("click", function () {
            wx
              .miniProgram
              .redirectTo({url:"/pages/serviceList/serviceList",compelete(res){console.log(res)}})
            
          })
        const input = document.querySelector("input");
        input.onchange = function (e) {
          const file = input.files[0];
          if (file.size / (1024 * 1024) <= 10) {
            const reader = new FileReader();
            reader.onload = function () {
              fetch("/service/file/{{id}}", {
                method: 'PUT', // or 'PUT'
                body: JSON.stringify([file.name, file.size, reader.result]), // data can be `string` or {object}!
                headers: new Headers({'Content-Type': 'application/json'})
              }).then(res => wx.miniProgram.navigateBack({delta: 1}))
              /*
              const ajax11 = new XMLHttpRequest();

              ajax11.onreadystatechange = function () {
                {# asdd() #}

                if (ajax11.status === 201) {
                  // wx.miniProgram.redirectTo({url:"/pages/submitService/submitService"})

                }
              };

              ajax11.open("PUT", "/service/file/{{id}}", true);
              ajax11.setRequestHeader("Content-Type", "application/json");

              ajax11.send(JSON.stringify([file.name, file.size, reader.result]));
       fuck()
*/
            };
            reader.readAsDataURL(file);
          }
        };
        // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
      });
    </script>
  </body>
</html>